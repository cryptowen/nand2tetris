// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    RAM4K(in=in, load=load1, address=address[3..14], out=o1);
    RAM4K(in=in, load=load2, address=address[3..14], out=o2);
    RAM4K(in=in, load=load3, address=address[3..14], out=o3);
    RAM4K(in=in, load=load4, address=address[3..14], out=o4);
    RAM4K(in=in, load=load5, address=address[3..14], out=o5);
    RAM4K(in=in, load=load6, address=address[3..14], out=o6);
    RAM4K(in=in, load=load7, address=address[3..14], out=o7);
    RAM4K(in=in, load=load8, address=address[3..14], out=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address[0..2], out=out);
}